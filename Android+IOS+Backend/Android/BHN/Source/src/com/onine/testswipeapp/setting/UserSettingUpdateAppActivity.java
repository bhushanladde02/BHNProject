package com.onine.testswipeapp.setting;
//************************************************************************//
//                                                                        //
// Name        =  UserSettingUpdateAppActivity                                                  //
//                                                                        //
// Description =                                                          // 
//                                                                        //
// Copyright   = 1232-AUT \u00a9 Copyright ONINE 2014,2015                //
//               Licensed Material - Program Property of ONINE            //
//               Refer to Copyright Instructions Form Number G231-2083    //
//                                                                        //
//               ONINE Confidential (ONINE Confidential-Restricted when   //
//               combined with the aggregated OCO source modules for      //
//               this program)                                            //
//                                                                        //
//               OCO Source Material                                      //
//                                                                        //
// Status      = Version 01 Release 01 Modification Level 01              //
//                                                                        //
// Compiler    = Java Standard Edition (build 1.7)                        //                    
//                                                                        //
// Change Activity:                                                       //
//                                                                        //
// Feature/Defect     Date                Description                     //
// --------------  ----------  ------------------------------------------ //
// R12493   - YP  2014/09/26    Part Created                              //
//************************************************************************//

import java.io.BufferedReader;import java.io.FileOutputStream;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import org.apache.http.HttpResponse;import org.apache.http.client.ClientProtocolException;import org.apache.http.client.HttpClient;import org.apache.http.client.methods.HttpGet;import org.apache.http.impl.client.DefaultHttpClient;import org.apache.http.util.EntityUtils;import android.app.Activity;import android.app.AlertDialog;import android.app.ProgressDialog;import android.content.Context;import android.os.AsyncTask;import android.os.Bundle;import com.onine.testswipeapp.R;import com.onine.testswipeapp.tabs.products.utility.ParseProductJson;public class UserSettingUpdateAppActivity extends Activity {	int statusClass=2;	int dismiss=0;	ProgressDialog ringProgressDialog;	UserSettingUpdateAppActivity act;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.activity_user_setting_update_app);		act=this;								ringProgressDialog = ProgressDialog.show(UserSettingUpdateAppActivity.this, "Please wait ...",	"Updating Application ...", true);				ringProgressDialog.setCancelable(true);				new HttpAsyncTask().execute("productsJson.json--http://104.130.240.26:8080/bhn/service/products/","testInstructions.json--http://104.130.240.26:8080/bhn/service/testinstr/");				new Thread(new Runnable() {			@Override			public void run() {				try {					do{						Thread.sleep(2000);					}while(dismiss!=1);									} catch (Exception e) {				}				ringProgressDialog.dismiss();											}		}).start();			}										public static String convertStreamToString(InputStream inputStream) throws IOException {		if (inputStream != null) {		StringBuilder sb = new StringBuilder();		String line;		try {		BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream, "UTF-8"));		while ((line = reader.readLine()) != null) {		sb.append(line).append("\n");		}				} finally {		inputStream.close();		}		return sb.toString();		} else {		return "";		} }private class HttpAsyncTask extends AsyncTask<String, Void, String> {		AlertDialog.Builder  builder;    protected void onPreExecute() {   super.onPreExecute();         builder = new AlertDialog.Builder(UserSettingUpdateAppActivity.this);      }    @Override    protected String doInBackground(String... urls) {               return POST(urls);    	    }       @Override    protected void onPostExecute(String result) {} }public String POST(String url[]){	System.out.println("I am in post data./..............................");    			String result=null;	for (int i = 0; i < url.length; i++) {		String fileURLMapping[]=url[i].split("--");		String Jsonfilename=fileURLMapping[0].trim();		String urltofetchJson=fileURLMapping[1].trim();	    HttpClient httpclient = new DefaultHttpClient();	    HttpGet httppost = new HttpGet(urltofetchJson);	    	    try {	        HttpResponse response = httpclient.execute(httppost);	     	        	int status = response.getStatusLine().getStatusCode();	        		        	System.out.println("Status is : "+status);	        	ParseProductJson parseJson=new ParseProductJson();	        	if (status == 200) {	        		statusClass=status;	        	     result = EntityUtils.toString(response.getEntity());   	        	     System.out.println("################result1###############################"+result);	        	     if(result.contains("{\"hash\":null}")){	        	    	 statusClass=400;	        	     }	        	     	        	     FileOutputStream fos = openFileOutput(Jsonfilename, Context.MODE_PRIVATE);	        	     fos.write(result.getBytes());	        	     fos.close();	      	        	     System.out.println("**** fetched Data from url [ "+urltofetchJson+" ] and writem to file [ "+Jsonfilename+" ].");	        	     dismiss=1;	        	     System.out.println("Done");	        	     	        	     	        	     	        	     	             }	        else{	        	statusClass=400;	        	result = "Did not work!";	        	dismiss=1;	            }	    } catch (ClientProtocolException e) {	    	e.printStackTrace();	    } catch (IOException e) {	    	e.printStackTrace();	    }																			}				   return result; }}